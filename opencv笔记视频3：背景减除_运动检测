'''
基础
在很多基础应用中背景检出都是一个非常重要的步骤。例如顾客统计，使用一个静态摄像头来记录进入和离开房间的人数，
或者是交通摄像头，需要提取交通工具的信息等。在所有的这些例子中，首先要将人或车单独提取出来。
技术上来说，我们需要从静止的背景中提取移动的前景。
如果你有一张背景（仅有背景不含前景）图像，比如没有顾客的房间，没有交通工具的道路等，那就好办了。
我们只需要在新的图像中减去背景就可以得到前景对象了。
但是在大多数情况下，我们没有这样的（背景）图像，所以我们需要从我们有的图像中提取背景。
如果图像中的交通工具还有影子的话，那这个工作就更难了，因为影子也在移动，仅仅使用减法会把影子也当成前景。
真是一件很复杂的事情。为了实现这个目的科学家们已经提出了几种算法。
'''

'''
BackgroundSubtractorMOG2
这个也是以高斯混合模型为基础的背景/前景分割算法。它是以 2004 年和 2006 年 Z.Zivkovic 的两篇文章为基础的。
这个算法的一个特点是它为每一个像素选择一个合适数目的高斯分布。（上一个方法中我们使用是 K 高斯分布）。
这样就会对由于亮度等发生变化引起的场景变化产生更好的适应。和前面一样我们需要创建一个背景对象。
但在这里我们我们可以选择是否检测阴影。如果 detectShadows = True（默认值），
它就会检测并将影子标记出来，但是这样做会降低处理速度。影子会被标记为灰色。
'''

import numpy as np
import cv2
#cap = cv2.VideoCapture('1.mp4')
cap = cv2.VideoCapture(r'H:\1.asf')
kernel = cv2.getStructuringElement(cv2.MORPH_ELLIPSE,(3,3))

fgbg =cv2.createBackgroundSubtractorMOG2()
#fgbg = cv2.createBackgroundSubtractorKNN()         #两种背景分割器

while(1):
    ret, frame = cap.read()
    fgmask = fgbg.apply(frame)
    fgmask = cv2.morphologyEx(fgmask, cv2.MORPH_OPEN, kernel)    
    
    #打印有多少前景的像素，可以设置一个阈值，超过了就保存该帧的索引，这样可以用来检测移动物体
    print(np.count_nonzero(fgmask))                     
    cv2.imshow('frame',fgmask)
    '''
    #下面几行作用是把移动物体彩色显示，但是效果很差，而且速度变慢
    fgmask1=fgmask.reshape(fgmask.shape[0],fgmask.shape[1],-1)
    print(frame.shape,fgmask1.shape)
    mm=frame*fgmask1
    cv2.imshow('frame',mm)
    '''
    
    k = cv2.waitKey(1) & 0xff
    if k == 27:
        break
cap.release()
